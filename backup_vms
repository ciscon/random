#!/bin/bash
#live backup of lvm backed vms using borg
#
##restoration command
#borg extract --stdout ${backup_mountpoint}/${backupdir}::LVM-DATE LVM > ${lvpath}/LVM


backup_mountpoint="/mnt/ssnas1"
lvpath="/dev/vmvg1"
backupdir="vm_backup"

#make sure ls isn't polluted
unalias ls >/dev/null 2>&1

#lvs of vms to backup
lvs=$(ls ${lvpath})

#check that backup mountpoint is mounted
mountpoint -q ${backup_mountpoint}||mount ${backup_mountpoint} >/dev/null 2>&1
mountpoint -q ${backup_mountpoint} >/dev/null 2>&1

if [ $? -ne 0 ];then
  echo "ssnas1 not mounted, exiting."
  exit 1
fi

#create backup directory if it does not exist
if [ ! -d ${backup_mountpoint}/${backupdir} ];then
  borg init -e none ${backup_mountpoint}/${backupdir} >/dev/null 2>&1
fi

#backup lvm configuration
echo "backing up lv information"
lvdisplay > /tmp/lvdisplay.txt
borg create ${backup_mountpoint}/${backupdir}::lvdisplay-`date +%Y-%m-%d` /tmp/lvdisplay.txt

#do actual backups
for lv in $lvs;do

  echo "backing up $lv at `date`"
  lvcreate -L20G -s -n backup$lv $lvpath/$lv >/dev/null 2>&1
  if [ $? -ne 0 ];then
    echo "creation of snapshot failed, exiting."
    lvremove $lvpath/backup$lv -f >/dev/null 2>&1
    exit 2
  fi

  sync

#fast compression, large chunks
nice ionice -n 2 borg create --compression lz4 --chunker-params 19,23,21,4095 --read-special -v --stats ${backup_mountpoint}/${backupdir}::${lv}-`date +%Y-%m-%d` $lvpath/backup$lv


  if [ $? -ne 0 ];then
    echo "backup of $lv failed, exiting."
    lvremove $lvpath/backup$lv -f >/dev/null 2>&1
    exit 3 
  fi

  lvremove $lvpath/backup$lv -f >/dev/null 2>&1
  if [ $? -ne 0 ];then
    echo "removal of snaphot failed, exiting."
    exit 4
  fi

  echo -e "backup of $lv complete\n"

done

echo "removing old archives..."
echo "just running with --dry-run, remove this when we actually want to remove old backups"
borg prune --dry-run --stats -v --keep-daily=7 --keep-weekly=8 ${backup_mountpoint}/${backupdir}
